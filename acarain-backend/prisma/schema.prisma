// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String @id @default(cuid())
  name      String
  email     String @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id            String @id @default(cuid())
  thumbnail     String
  title         String
  slug          String @unique
  description   String @db.LongText
  location      String 
  date          DateTime
  quota         Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  registrations Registration[]
}

model Major {
  id            String @id @default(cuid())
  name          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  registrations Registration[]
}

model Registration {
  id            String @id @default(cuid())
  name          String
  npm           String
  majorId       String
  major         Major @relation(fields: [majorId], references: [id], onDelete: NoAction)
  whatsapp      String
  eventId       String
  event         Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  status        RegistrationStatus @default(PENDING)
  attendance    AttendanceStatus @default(ABSENT)
  cancelToken   String @unique
  qrCode        String @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum RegistrationStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}

enum AttendanceStatus {
  ABSENT
  ATTENDED
}